<style>
  .pagefind-ui__message {
    font-family: Advent;
    font-size: var(--text-4xl);
    margin-bottom: calc(var(--spacing)*1);
    margin-top: calc(var(--spacing)*8);
    text-align: left;
    color: var(--color-secondary);
  }
  .pagefind-ui__results {
    list-style-type: none;
  }
  .pagefind-ui__result-title {
    margin: 20px 0 5px;
    font-size: var(--text-xl);
  }
  .pagefind-ui__result-excerpt {
    margin: 5px 0 20px;
  }
  .pagefind-ui__button {
    cursor: pointer;
  }
</style>

<div id="searchdiv" class="search"></div>

<div class="transition fixed -right-5 top-0 p-2 translate-y-0 mr-5" id="duckduckgo" > 
	<form action="https://duckduckgo.com/" method="post" class="group/search min-h-2.5">
		<label>
			<span class="md:invisible group-focus-within/search:invisible align-bottom"><span class="sr-only">Rechercher :</span> ðŸ”Ž </span>
			<input placeholder="Recherche" type="search" id="searchinput" name="q" autocomplete="off" class="
      w-0 md:w-35 !p-0 md:!p-2 -mr-6 border-0 border-black md:border-1 bg-white rounded-xl
      fixed top-1 right-10
      delay-100 duration-300 ease-in-out 
      group-focus-within/search:!p-2 group-focus-within/search:max-w-[calc(80vw-50px)] group-focus-within/search:w-150 group-focus-within/search:mt-16" onfocus="loadPagefindUI()"
      />
		</label>
		<input type="hidden" name="sites" value="{{meta.url}}" />
	</form>
</div>

<script type="text/javascript">

  const loadPagefindUI = () => {
    if (typeof PagefindUI === "undefined") {
      var script = document.createElement('script');
      script.setAttribute('type', 'text/javascript');
      script.setAttribute('src', "/pagefind/pagefind-ui.js");
      script.addEventListener('load', function() {
        initPagefindUI()
      });
      document.body.appendChild(script);
    }
  }

  const initPagefindUI = () => {
    new PagefindUI({ 
      element: '#searchdiv', 
      showImages: false ,
      pageSize: 10
    });

    document.getElementById('duckduckgo').classList = 'hidden';

    const searchInput = document.getElementById('searchinput');
    searchInput.removeAttribute('id');
    const pageFindForm = document.getElementsByClassName('pagefind-ui__form')[0];
    pageFindForm.classList.add('group/search');
    const pageFindInput = document.getElementsByClassName('pagefind-ui__search-input')[0];
    pageFindInput.classList = searchInput.classList;
    pageFindInput.setAttribute('id', 'searchinput');
    pageFindInput.focus();
    document.getElementsByClassName('pagefind-ui__search-clear ')[0].classList = 'hidden';

    // update 'Search this site' link on top of the tabindex page
    const searchThisSite = document.getElementById('searchthissite');
    searchThisSite.setAttribute('href', '#searchinput');

    // create label that shows on small screens
    const label = document.createElement('LABEL'); 
    const labelText = document.createTextNode(' ðŸ”Ž ');
    label.appendChild(labelText);
    label.classList.add('md:invisible', 'group-focus-within/search:invisible', 'p-3', 'align-bottom', 'cursor-pointer', 'fixed', 'top-0', 'right-2');
    label.setAttribute('for', 'searchinput');
    pageFindInput.insertAdjacentElement('beforebegin', label);

    // hide page content if there is a search term
    pageFindInput.onkeyup = () => {
      const section = document.getElementsByTagName('section')[0];
      if (pageFindInput.value.length > 0) {
        section.classList.add('hidden');
      } else {
        section.classList.remove('hidden');
      }
    }

    const drawer = document.getElementsByClassName('pagefind-ui__drawer')[0].classList.add('delay-100', 'duration-300', 'ease-in-out');
    // observe the result list mutations to add a top margin 
    // when visible and when search field is on the content
    var observer = new MutationObserver(function (mutations) {
      mutations.forEach((mutation) => {
        if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
          if (resultList.classList.contains('pagefind-ui__hidden')) {
            resultList.classList.contains('group-focus-within/search:mt-16') && resultList.classList.remove('group-focus-within/search:mt-16');
          } 
          else {
            !resultList.classList.contains('group-focus-within/search:mt-16') && resultList.classList.add('group-focus-within/search:mt-16');
          }
        }
      });
    });

    const resultList = document.getElementsByClassName('pagefind-ui__drawer')[0];
    observer.observe(resultList, {
      attributes: true,
      attributeFilter: ['class']
    });
  }

</script>
