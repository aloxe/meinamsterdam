<style>
  .pagefind-ui__message {
    font-weight: bold;
  }
  .pagefind-ui__results {
    list-style-type: none;
  }
  .pagefind-ui__result-title {
    margin: 20px 0 10px;
  }
  .pagefind-ui__result-excerpt {
    margin: 5px 0 20px;
  }
</style>

<div id="searchdiv" class="search"></div>

<script src="/pagefind/pagefind-ui.js" onload="
  document.getElementById('duckduckgo').classList = 'hidden';

  new PagefindUI({ element: '#searchdiv', showImages: false });

  const searchInput = document.getElementById('search');
  const pageFindForm = document.getElementsByClassName('pagefind-ui__form')[0];
  pageFindForm.classList.add('group/search');
  const pageFindInput = document.getElementsByClassName('pagefind-ui__search-input')[0];
  pageFindInput.classList = searchInput.classList;
  pageFindInput.setAttribute('id', 'searchinput');
  // pageFindInput.setAttribute('tabindex', '1'); // set search as one of the 3 first items of the tabindex (focussable on tab)
  pageFindInput.classList.add('absolute', 'top-2', 'right-10');
  document.getElementsByClassName('pagefind-ui__search-clear ')[0].classList = 'hidden';
 
  // create a 'Search this site' link on top of the tabindex page
  const searchThisSite = document.createElement('A');
  const searchThisSiteText = document.createTextNode('Search this site');
  searchThisSite.appendChild(searchThisSiteText);
  searchThisSite.setAttribute('href', '#searchinput');
  searchThisSite.classList.add('transition', 'right-0', 'bg-primary', 'text-bg', 'dark:bg-bg-menu-dark', 'absolute', 'p-3', 'm-2', '-translate-y-16', 'focus:translate-y-12');
  const tabindexNav = document.getElementById('tabindexnav');
  tabindexNav.appendChild(searchThisSite);
  
    // create label that shows on small screens
  const label = document.createElement('LABEL');
  const labelText = document.createTextNode(' ðŸ”Ž ');
  label.appendChild(labelText);
  label.classList.add('md:invisible', 'group-focus-within/search:invisible', 'p-4', 'align-bottom', 'cursor-pointer', 'absolute', 'top-2', 'right-15');
  label.setAttribute('for', 'searchinput');
  pageFindInput.insertAdjacentElement('beforebegin', label);

  // hide page content if there is a search term
  pageFindInput.onkeyup = () => {
    const header = document.getElementsByTagName('header')[0];
    const article = document.getElementsByTagName('article')[0];
    const sections = [...document.getElementsByTagName('section')];
    if (pageFindInput.value.length > 0) {
      header.classList.add('hidden');
      article.classList.add('hidden');
      sections.forEach((sections) => { sections.classList.add('hidden'); });
    } else {
      header.classList.remove('hidden');
      article.classList.remove('hidden');
      sections.forEach((sections) => { sections.classList.remove('hidden'); });
    }
  }

  // observe the result list mutations to add a top margin 
  // when visible and when search field is on the content
  var observer = new MutationObserver(function (mutations) {
    mutations.forEach((mutation) => {
      if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
        if (resultList.classList.contains('pagefind-ui__hidden')) {
          resultList.classList.contains('group-focus-within/search:mt-20') && resultList.classList.remove('group-focus-within/search:mt-20');
        } 
        else {
          !resultList.classList.contains('group-focus-within/search:mt-20') && resultList.classList.add('group-focus-within/search:mt-20');
        }
      }
    });
  });

  const resultList = document.getElementsByClassName('pagefind-ui__drawer')[0];
  observer.observe(resultList, {
    attributes: true,
    attributeFilter: ['class']
  });
  
"></script>